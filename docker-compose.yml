services:
  # Api Gateway
  kong:
    image: kong:latest
    environment:
      - KONG_DATABASE=off
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml
    volumes:
      - ./kong.yml:/etc/kong/kong.yml
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      - sentiment-net

  # Microservices
  auth:
    build:
      context: ../sentiment-platform-auth
      dockerfile: Dockerfile.dev
    volumes:
      - ../sentiment-platform-auth:/app
      - /app/node_modules
    environment:
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/auth_db?replicaSet=rs0
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-secret-key-here
      - NODE_ENV=development
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sentiment-net

  ingestion:
    build: ../sentiment-platform-ingestion
    environment:
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - kafka
    networks:
      - sentiment-net

  # Infrastructure
  # MongoDB Replica Set
  mongo1:
    image: mongo:latest
    command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - mongo1-data:/data/db
    networks:
      - sentiment-net
  mongo2:
    image: mongo:latest
    command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27018:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - mongo2-data:/data/db
    networks:
      - sentiment-net
  mongo3:
    image: mongo:latest
    command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27019:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - mongo3-data:/data/db
    networks:
      - sentiment-net

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sentiment-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - sentiment-net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics",
          "--list",
          "--bootstrap-server",
          "localhost:9092",
        ]
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - sentiment-net

networks:
  sentiment-net:
    driver: bridge

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
